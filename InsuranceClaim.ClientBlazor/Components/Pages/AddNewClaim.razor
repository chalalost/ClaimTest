@page "/add-new"
@using InsuranceClaim.ClientBlazor.Components.Layout.Shared
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@inject HttpClient http
@inject NavigationManager Navigation

<hr/>

<EditForm Model="@newClaim" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="customerName" class="form-label">CustomerName</label>
        <MudTextField @bind-Value="newClaim.CustomerName" For="@(() => newClaim.CustomerName)" />
    </div>

    <div class="mb-3">
        <label for="amount" class="form-label">Amount</label>
        <MudNumericField @bind-Value="newClaim.ClaimAmount" For="@(() => newClaim.ClaimAmount)" />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <MudTextField @bind-Value="newClaim.ClaimDescription" For="@(() => newClaim.ClaimDescription)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>




@code {
    private ClaimSubmitDto newClaim { get; set; } = new ClaimSubmitDto();

    private async Task HandleSubmit()
    {
        var request = new RequestSbumit()
            {
                CustomerName = newClaim.CustomerName,
                ClaimAmount = newClaim.ClaimAmount,
                ClaimDescription = newClaim.ClaimDescription,
            };
        // Call API to submit new claim
        var response = await http.PostAsJsonAsync("http://localhost:5000/api/Claims/submit-claim", request);
        if (response.IsSuccessStatusCode)
        {   
            newClaim = new ClaimSubmitDto();  // Reset the form
            Navigation.NavigateTo("/");
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine(errorContent);
        }
    }

    private class RequestSbumit
    {
        public string CustomerName { get; set; } = String.Empty;
        public decimal ClaimAmount { get; set; }
        public string ClaimDescription { get; set; } = String.Empty;
    }

    public class ErrorMes
    {
        
    }
    @*{
        "type": "https://tools.ietf.org/html/rfc9110#section-15.5.1",
        "title": "One or more validation errors occurred.",
        "status": 400,
        "errors": {
          "ClaimAmount": [
            "Claim amount must be greater than zero."
          ],
          "CustomerName": [
            "Customer name is required."
          ],
          "ClaimDescription": [
            "Claim description is required."
          ]
          },
        "traceId": "00-e8cc41bba75f8ab9eebe5d19ad52a7b9-2068f598a9dd2950-00"
    }*@
}
